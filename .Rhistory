}
rm(pairs_data)
}
rm(temp,i,j,k)
gnet_recalldata_matricesarray[1,,]
gnet_recalldata_matricesarray_pairs[1,,]
View(comparison_table)
View(overall_contrast_possibilities)
View(original_stimulus)
View(recalled_stimulus)
# get the location of the prototypes
prototype_pos <- c(match("prototype1",gnet_stimdata_matricesarray_stimulusID),
match("prototype2",gnet_stimdata_matricesarray_stimulusID),
match("prototype3",gnet_stimdata_matricesarray_stimulusID),
match("prototype4",gnet_stimdata_matricesarray_stimulusID))
for (s in 1:length(unique(gnet_recalldata_matricesarray_stimulusID))){
recallidentity_pairings <- matrix(nrow = 16, ncol = 4)
colnames(recallidentity_pairings) <- c("participantID","prototype_nr","recall_nr","overall_contrast")
recalled_pos <- c(which(gnet_recalldata_matricesarray_stimulusID %in% unique(gnet_recalldata_matricesarray_stimulusID)[s]))
for (p in 1:length(prototype_pos)){
original_stimulus <- gnet_stimdata_matricesarray[prototype_pos[p],,]
original_stim_pairs <- gnet_stimdata_matricesarray_pairs[prototype_pos[p],,]
for (q in 1:length(recalled_pos)){
recalled_stimulus <- gnet_recalldata_matricesarray[recalled_pos[q],,]
recalled_stim_pairs <- gnet_recalldata_matricesarray_pairs[recalled_pos[q],,]
source('05-comparator_preselection.R')
recallidentity_pairings[(p-1)*4+q,"participantID"] <- unique(gnet_recalldata_matricesarray_stimulusID)[s]
recallidentity_pairings[(p-1)*4+q,"prototype_nr"] <- p
recallidentity_pairings[(p-1)*4+q,"recall_nr"] <- q
recallidentity_pairings[(p-1)*4+q,"overall_contrast"] <- overall_contrast_possibilities[1,21]
}
}
w <- 0
overall_recallidentity_possibilities <- matrix(nrow = 0, ncol = 9)
for (t in 1:nrow(recallidentity_pairings[recallidentity_pairings[, "prototype_nr"] == 1,])){
current_pairing <- matrix(nrow = 1, ncol = 9)
current_pairing[1,1] <- recallidentity_pairings[recallidentity_pairings[,"prototype_nr"] == 1,][t,"prototype_nr"]
current_pairing[1,2] <- recallidentity_pairings[recallidentity_pairings[,"prototype_nr"] == 1,][t,"recall_nr"]
current_pairing[1,9] <- recallidentity_pairings[recallidentity_pairings[,"prototype_nr"] == 1,][t,"overall_contrast"]
temp <- recallidentity_pairings[!(recallidentity_pairings[,"prototype_nr"] == 1) & !(recallidentity_pairings[,"recall_nr"] == t),]
for (u in 1:nrow(temp[temp[, "prototype_nr"] == 2,])){
current_pairing2 <- current_pairing
current_pairing2[1,3] <- temp[temp[,"prototype_nr"] == 2,][u,"prototype_nr"]
current_pairing2[1,4] <- temp[temp[,"prototype_nr"] == 2,][u,"recall_nr"]
current_pairing2[1,9] <- as.numeric(current_pairing[1,9]) + as.numeric(temp[temp[,"prototype_nr"] == 2,][u,"overall_contrast"])
temp2 <- temp[!(temp[,"prototype_nr"] == 2) & !(temp[,"recall_nr"] == temp[temp[,"prototype_nr"] == 2,][u,"recall_nr"]),]
for (v in 1:nrow(temp2[temp2[, "prototype_nr"] == 3,])){
current_pairing3 <- current_pairing2
current_pairing3[1,5] <- temp2[temp2[,"prototype_nr"] == 3,][v,"prototype_nr"]
current_pairing3[1,6] <- temp2[temp2[,"prototype_nr"] == 3,][v,"recall_nr"]
current_pairing3[1,9] <- as.numeric(current_pairing2[1,9]) + as.numeric(temp2[temp2[,"prototype_nr"] == 3,][v,"overall_contrast"])
temp3 <- temp2[!(temp2[,"prototype_nr"] == 3) & !(temp2[,"recall_nr"] == temp2[temp2[,"prototype_nr"] == 3,][v,"recall_nr"]),]
temp3 <- t(as.matrix(temp3))
current_pairing3[1,7] <- temp3[1,"prototype_nr"]
current_pairing3[1,8] <- temp3[1,"recall_nr"]
current_pairing3[1,9] <- as.numeric(current_pairing3[1,9]) + as.numeric(temp3[1,"overall_contrast"])
overall_recallidentity_possibilities <- rbind(overall_recallidentity_possibilities, current_pairing3)
w <- w + 1
print(paste("calculating combination ",w,sep=""))
}
}
}
overall_recallidentity_possibilities <- overall_recallidentity_possibilities[order(overall_recallidentity_possibilities[,9],decreasing=FALSE),]
if (!exists("final_recollection_data")){
final_recollection_data <- recallidentity_pairings[recallidentity_pairings[,"prototype_nr"] == overall_recallidentity_possibilities[1,1] & recallidentity_pairings[,"recall_nr"] == overall_recallidentity_possibilities[1,2]|
recallidentity_pairings[,"prototype_nr"] == overall_recallidentity_possibilities[1,3] & recallidentity_pairings[,"recall_nr"] == overall_recallidentity_possibilities[1,4]|
recallidentity_pairings[,"prototype_nr"] == overall_recallidentity_possibilities[1,5] & recallidentity_pairings[,"recall_nr"] == overall_recallidentity_possibilities[1,6]|
recallidentity_pairings[,"prototype_nr"] == overall_recallidentity_possibilities[1,7] & recallidentity_pairings[,"recall_nr"] == overall_recallidentity_possibilities[1,8],]
} else {
final_recollection_data <- rbind(final_recollection_data, recallidentity_pairings[recallidentity_pairings[,"prototype_nr"] == overall_recallidentity_possibilities[1,1] & recallidentity_pairings[,"recall_nr"] == overall_recallidentity_possibilities[1,2]|
recallidentity_pairings[,"prototype_nr"] == overall_recallidentity_possibilities[1,3] & recallidentity_pairings[,"recall_nr"] == overall_recallidentity_possibilities[1,4]|
recallidentity_pairings[,"prototype_nr"] == overall_recallidentity_possibilities[1,5] & recallidentity_pairings[,"recall_nr"] == overall_recallidentity_possibilities[1,6]|
recallidentity_pairings[,"prototype_nr"] == overall_recallidentity_possibilities[1,7] & recallidentity_pairings[,"recall_nr"] == overall_recallidentity_possibilities[1,8],])
}
rm(temp,temp2,temp3)
rm(current_pairing,current_pairing2,current_pairing3)
rm(recallidentity_pairings)
}
View(recallidentity_pairings)
View(comparison_table)
View(overall_contrast_possibilities)
gnet_recalldata_matricesarray_stimulusID
original_stimulus <- gnet_stimdata_matricesarray[103,,]
recalled_stimulus <- gnet_recalldata_matricesarray[1,,]
original_stim_pairs <- gnet_stimdata_matricesarray_pairs[103,,]
recalled_stim_pairs <- gnet_recalldata_matricesarray_pairs[1,,]
source("~/gnet_recall_analysis/05-comparator_preselection.R")
View(overall_contrast_possibilities)
source("~/gnet_recall_analysis/05-01-visualizer.R", encoding = 'UTF-8')
source("~/gnet_recall_analysis/05-02-visualizer_recall.R", encoding = 'UTF-8')
View(original_stimulus)
View(original_stim_pairs)
View(recalled_stim_pairs)
source("~/gnet_recall_analysis/05-comparator_preselection.R")
comparison_table <- matrix(nrow = 100, ncol = 13)
colnames(comparison_table) <- c("orig_rownum","recall_rownum","shape","color","yrow","xcol","shape2","color2","yrow2","xcol2","diffy","diffx","sum_contrast")
temp_comparisons <- matrix(nrow = 2, ncol = 13)
colnames(temp_comparisons) <- c("orig_rownum","recall_rownum","shape","color","yrow","xcol","shape2","color2","yrow2","xcol2","diffy","diffx","sum_contrast")
for (i in 1:nrow(original_stim_pairs)){
for (j in 1:nrow(recalled_stim_pairs)){
comparison_table[(i-1)*10+j,"orig_rownum"] <- i
comparison_table[(i-1)*10+j,"recall_rownum"] <- j
# pair order as in data
temp_comparisons[1,"shape"] <- as.numeric(ifelse(original_stim_pairs[i,"shape"] == recalled_stim_pairs[j,"shape"],0,1))
temp_comparisons[1,"color"] <- as.numeric(ifelse(original_stim_pairs[i,"color"] == recalled_stim_pairs[j,"color"],0,1))
temp_comparisons[1,"yrow"] <- abs(original_stim_pairs[i,"yrow"] - recalled_stim_pairs[j,"yrow"])
temp_comparisons[1,"xcol"] <- abs(original_stim_pairs[i,"xcol"] - recalled_stim_pairs[j,"xcol"])
temp_comparisons[1,"shape2"] <- as.numeric(ifelse(original_stim_pairs[i,"shape2"] == recalled_stim_pairs[j,"shape2"],0,1))
temp_comparisons[1,"color2"] <- as.numeric(ifelse(original_stim_pairs[i,"color2"] == recalled_stim_pairs[j,"color2"],0,1))
temp_comparisons[1,"yrow2"] <- abs(original_stim_pairs[i,"yrow2"] - recalled_stim_pairs[j,"yrow2"])
temp_comparisons[1,"xcol2"] <- abs(original_stim_pairs[i,"xcol2"] - recalled_stim_pairs[j,"xcol2"])
temp_comparisons[1,"diffy"] <- abs(abs(original_stim_pairs[i,"diffy"]) - abs(recalled_stim_pairs[j,"diffy"]))
temp_comparisons[1,"diffx"] <- abs(abs(original_stim_pairs[i,"diffx"]) - abs(recalled_stim_pairs[j,"diffx"]))
temp_comparisons[1,"sum_contrast"] <- sum(temp_comparisons[1,c("shape","color","yrow","xcol","shape2","color2","yrow2","xcol2","diffy","diffx")])
# alternative pair order
temp_comparisons[2,"shape"] <- as.numeric(ifelse(original_stim_pairs[i,"shape"] == recalled_stim_pairs[j,"shape2"],0,1))
temp_comparisons[2,"color"] <- as.numeric(ifelse(original_stim_pairs[i,"color"] == recalled_stim_pairs[j,"color2"],0,1))
temp_comparisons[2,"yrow"] <- abs(original_stim_pairs[i,"yrow"] - recalled_stim_pairs[j,"yrow2"])
temp_comparisons[2,"xcol"] <- abs(original_stim_pairs[i,"xcol"] - recalled_stim_pairs[j,"xcol2"])
temp_comparisons[2,"shape2"] <- as.numeric(ifelse(original_stim_pairs[i,"shape2"] == recalled_stim_pairs[j,"shape"],0,1))
temp_comparisons[2,"color2"] <- as.numeric(ifelse(original_stim_pairs[i,"color2"] == recalled_stim_pairs[j,"color"],0,1))
temp_comparisons[2,"yrow2"] <- abs(original_stim_pairs[i,"yrow2"] - recalled_stim_pairs[j,"yrow"])
temp_comparisons[2,"xcol2"] <- abs(original_stim_pairs[i,"xcol2"] - recalled_stim_pairs[j,"xcol"])
temp_comparisons[2,"diffy"] <- abs(abs(original_stim_pairs[i,"diffy"]) - abs(recalled_stim_pairs[j,"diffy"]))
temp_comparisons[2,"diffx"] <- abs(abs(original_stim_pairs[i,"diffx"]) - abs(recalled_stim_pairs[j,"diffx"]))
temp_comparisons[2,"sum_contrast"] <- sum(temp_comparisons[2,c("shape","color","yrow","xcol","shape2","color2","yrow2","xcol2","diffy","diffx")])
if (temp_comparisons[1,"sum_contrast"] >= temp_comparisons[2,"sum_contrast"]){
comparison_table[(i-1)*10+j,] <- temp_comparisons[2,]
} else {
comparison_table[(i-1)*10+j,] <- temp_comparisons[1,]
}
# comparison_table[(i-1)*10+j,"shape"] <- as.numeric(ifelse(original_stim_pairs[i,"shape"] == recalled_stim_pairs[j,"shape"],0,1))
# comparison_table[(i-1)*10+j,"color"] <- as.numeric(ifelse(original_stim_pairs[i,"color"] == recalled_stim_pairs[j,"color"],0,1))
# comparison_table[(i-1)*10+j,"yrow"] <- abs(original_stim_pairs[i,"yrow"] - recalled_stim_pairs[j,"yrow"])
# comparison_table[(i-1)*10+j,"xcol"] <- abs(original_stim_pairs[i,"xcol"] - recalled_stim_pairs[j,"xcol"])
# comparison_table[(i-1)*10+j,"shape2"] <- as.numeric(ifelse(original_stim_pairs[i,"shape2"] == recalled_stim_pairs[j,"shape2"],0,1))
# comparison_table[(i-1)*10+j,"color2"] <- as.numeric(ifelse(original_stim_pairs[i,"color2"] == recalled_stim_pairs[j,"color2"],0,1))
# comparison_table[(i-1)*10+j,"yrow2"] <- abs(original_stim_pairs[i,"yrow2"] - recalled_stim_pairs[j,"yrow2"])
# comparison_table[(i-1)*10+j,"xcol2"] <- abs(original_stim_pairs[i,"xcol2"] - recalled_stim_pairs[j,"xcol2"])
# comparison_table[(i-1)*10+j,"diffy"] <- abs(abs(original_stim_pairs[i,"diffy"]) - abs(recalled_stim_pairs[j,"diffy"]))
# comparison_table[(i-1)*10+j,"diffx"] <- abs(abs(original_stim_pairs[i,"diffx"]) - abs(recalled_stim_pairs[j,"diffx"]))
# comparison_table[(i-1)*10+j,"sum_contrast"] <- sum(comparison_table[(i-1)*10+j,c("shape","color","yrow","xcol","shape2","color2","yrow2","xcol2","diffy","diffx")])
}
}
View(comparison_table)
comparison_table <- matrix(nrow = 100, ncol = 13)
colnames(comparison_table) <- c("orig_rownum","recall_rownum","shape","color","yrow","xcol","shape2","color2","yrow2","xcol2","diffy","diffx","sum_contrast")
temp_comparisons <- matrix(nrow = 2, ncol = 13)
colnames(temp_comparisons) <- c("orig_rownum","recall_rownum","shape","color","yrow","xcol","shape2","color2","yrow2","xcol2","diffy","diffx","sum_contrast")
for (i in 1:nrow(original_stim_pairs)){
for (j in 1:nrow(recalled_stim_pairs)){
# pair order as in data
temp_comparisons[1,"orig_rownum"] <- i
temp_comparisons[1,"recall_rownum"] <- j
temp_comparisons[1,"shape"] <- as.numeric(ifelse(original_stim_pairs[i,"shape"] == recalled_stim_pairs[j,"shape"],0,1))
temp_comparisons[1,"color"] <- as.numeric(ifelse(original_stim_pairs[i,"color"] == recalled_stim_pairs[j,"color"],0,1))
temp_comparisons[1,"yrow"] <- abs(original_stim_pairs[i,"yrow"] - recalled_stim_pairs[j,"yrow"])
temp_comparisons[1,"xcol"] <- abs(original_stim_pairs[i,"xcol"] - recalled_stim_pairs[j,"xcol"])
temp_comparisons[1,"shape2"] <- as.numeric(ifelse(original_stim_pairs[i,"shape2"] == recalled_stim_pairs[j,"shape2"],0,1))
temp_comparisons[1,"color2"] <- as.numeric(ifelse(original_stim_pairs[i,"color2"] == recalled_stim_pairs[j,"color2"],0,1))
temp_comparisons[1,"yrow2"] <- abs(original_stim_pairs[i,"yrow2"] - recalled_stim_pairs[j,"yrow2"])
temp_comparisons[1,"xcol2"] <- abs(original_stim_pairs[i,"xcol2"] - recalled_stim_pairs[j,"xcol2"])
temp_comparisons[1,"diffy"] <- abs(abs(original_stim_pairs[i,"diffy"]) - abs(recalled_stim_pairs[j,"diffy"]))
temp_comparisons[1,"diffx"] <- abs(abs(original_stim_pairs[i,"diffx"]) - abs(recalled_stim_pairs[j,"diffx"]))
temp_comparisons[1,"sum_contrast"] <- sum(temp_comparisons[1,c("shape","color","yrow","xcol","shape2","color2","yrow2","xcol2","diffy","diffx")])
# alternative pair order
temp_comparisons[2,"orig_rownum"] <- i
temp_comparisons[2,"recall_rownum"] <- j
temp_comparisons[2,"shape"] <- as.numeric(ifelse(original_stim_pairs[i,"shape"] == recalled_stim_pairs[j,"shape2"],0,1))
temp_comparisons[2,"color"] <- as.numeric(ifelse(original_stim_pairs[i,"color"] == recalled_stim_pairs[j,"color2"],0,1))
temp_comparisons[2,"yrow"] <- abs(original_stim_pairs[i,"yrow"] - recalled_stim_pairs[j,"yrow2"])
temp_comparisons[2,"xcol"] <- abs(original_stim_pairs[i,"xcol"] - recalled_stim_pairs[j,"xcol2"])
temp_comparisons[2,"shape2"] <- as.numeric(ifelse(original_stim_pairs[i,"shape2"] == recalled_stim_pairs[j,"shape"],0,1))
temp_comparisons[2,"color2"] <- as.numeric(ifelse(original_stim_pairs[i,"color2"] == recalled_stim_pairs[j,"color"],0,1))
temp_comparisons[2,"yrow2"] <- abs(original_stim_pairs[i,"yrow2"] - recalled_stim_pairs[j,"yrow"])
temp_comparisons[2,"xcol2"] <- abs(original_stim_pairs[i,"xcol2"] - recalled_stim_pairs[j,"xcol"])
temp_comparisons[2,"diffy"] <- abs(abs(original_stim_pairs[i,"diffy"]) - abs(recalled_stim_pairs[j,"diffy"]))
temp_comparisons[2,"diffx"] <- abs(abs(original_stim_pairs[i,"diffx"]) - abs(recalled_stim_pairs[j,"diffx"]))
temp_comparisons[2,"sum_contrast"] <- sum(temp_comparisons[2,c("shape","color","yrow","xcol","shape2","color2","yrow2","xcol2","diffy","diffx")])
if (temp_comparisons[1,"sum_contrast"] >= temp_comparisons[2,"sum_contrast"]){
comparison_table[(i-1)*10+j,] <- temp_comparisons[2,]
} else {
comparison_table[(i-1)*10+j,] <- temp_comparisons[1,]
}
# comparison_table[(i-1)*10+j,"shape"] <- as.numeric(ifelse(original_stim_pairs[i,"shape"] == recalled_stim_pairs[j,"shape"],0,1))
# comparison_table[(i-1)*10+j,"color"] <- as.numeric(ifelse(original_stim_pairs[i,"color"] == recalled_stim_pairs[j,"color"],0,1))
# comparison_table[(i-1)*10+j,"yrow"] <- abs(original_stim_pairs[i,"yrow"] - recalled_stim_pairs[j,"yrow"])
# comparison_table[(i-1)*10+j,"xcol"] <- abs(original_stim_pairs[i,"xcol"] - recalled_stim_pairs[j,"xcol"])
# comparison_table[(i-1)*10+j,"shape2"] <- as.numeric(ifelse(original_stim_pairs[i,"shape2"] == recalled_stim_pairs[j,"shape2"],0,1))
# comparison_table[(i-1)*10+j,"color2"] <- as.numeric(ifelse(original_stim_pairs[i,"color2"] == recalled_stim_pairs[j,"color2"],0,1))
# comparison_table[(i-1)*10+j,"yrow2"] <- abs(original_stim_pairs[i,"yrow2"] - recalled_stim_pairs[j,"yrow2"])
# comparison_table[(i-1)*10+j,"xcol2"] <- abs(original_stim_pairs[i,"xcol2"] - recalled_stim_pairs[j,"xcol2"])
# comparison_table[(i-1)*10+j,"diffy"] <- abs(abs(original_stim_pairs[i,"diffy"]) - abs(recalled_stim_pairs[j,"diffy"]))
# comparison_table[(i-1)*10+j,"diffx"] <- abs(abs(original_stim_pairs[i,"diffx"]) - abs(recalled_stim_pairs[j,"diffx"]))
# comparison_table[(i-1)*10+j,"sum_contrast"] <- sum(comparison_table[(i-1)*10+j,c("shape","color","yrow","xcol","shape2","color2","yrow2","xcol2","diffy","diffx")])
}
}
View(comparison_table)
View(temp_comparisons)
sorted_comparison_table <- comparison_table[order(comparison_table[, "sum_contrast"]), ]
fixed_pairings <- sorted_comparison_table[1:3,]
remaining_pairings <- sorted_comparison_table[4:100,]
View(fixed_pairings)
while (length(unique(fixed_pairings[,"orig_rownum"])) < 3 | length(unique(fixed_pairings[,"recall_rownum"])) < 3){
if (length(unique(fixed_pairings[,"orig_rownum"])) < 3){
fixed_pairings <- fixed_pairings[!duplicated(fixed_pairings[,"orig_rownum"]),]
rowstoreplace <- 3-(length(fixed_pairings)/13)
fixed_pairings <- rbind(fixed_pairings,remaining_pairings[1:rowstoreplace,])
remaining_pairings <- remaining_pairings[-(1:rowstoreplace),]
}
if (length(unique(fixed_pairings[,"recall_rownum"])) < 3){
fixed_pairings <- fixed_pairings[!duplicated(fixed_pairings[,"recall_rownum"]),]
rowstoreplace <- 3-(length(fixed_pairings)/13)
fixed_pairings <- rbind(fixed_pairings,remaining_pairings[1:rowstoreplace,])
remaining_pairings <- remaining_pairings[-(1:rowstoreplace),]
}
}
rm(sorted_comparison_table,remaining_pairings,rowstoreplace)
overall_contrast_possibilities <- matrix(nrow = 0, ncol = 21)
# variable to visually follow processing
r <- 0
reduced_comparison_table <- comparison_table[!(comparison_table[,"orig_rownum"] %in% fixed_pairings[,"orig_rownum"]) &
!(comparison_table[,"recall_rownum"] %in% fixed_pairings[,"recall_rownum"]),]
for (i in 1:nrow(reduced_comparison_table[reduced_comparison_table[, "orig_rownum"] == reduced_comparison_table[1,"orig_rownum"],])){
current_contrast <- matrix(nrow = 1, ncol = 21)
current_contrast[1,1] <- reduced_comparison_table[reduced_comparison_table[, "orig_rownum"] == reduced_comparison_table[1,"orig_rownum"],][i,"orig_rownum"]
current_contrast[1,2] <- reduced_comparison_table[reduced_comparison_table[, "orig_rownum"] == reduced_comparison_table[1,"orig_rownum"],][i,"recall_rownum"]
current_contrast[1,21] <- reduced_comparison_table[reduced_comparison_table[, "orig_rownum"] == reduced_comparison_table[1,"orig_rownum"],][i,"sum_contrast"]
temp <- reduced_comparison_table[!(reduced_comparison_table[,"orig_rownum"] == reduced_comparison_table[1,"orig_rownum"]) & !(reduced_comparison_table[,"recall_rownum"] == reduced_comparison_table[i,"recall_rownum"]),]
for (j in 1:nrow(temp[temp[, "orig_rownum"] == temp[1,"orig_rownum"],])){
current_contrast2 <- current_contrast
current_contrast2[1,3] <- temp[temp[,"orig_rownum"] == temp[1,"orig_rownum"],][j,"orig_rownum"]
current_contrast2[1,4] <- temp[temp[,"orig_rownum"] == temp[1,"orig_rownum"],][j,"recall_rownum"]
current_contrast2[1,21] <- current_contrast[1,21] + temp[temp[,"orig_rownum"] == temp[1,"orig_rownum"],][j,"sum_contrast"]
temp2 <- temp[!(temp[,"orig_rownum"] == temp[1,"orig_rownum"]) & !(temp[,"recall_rownum"] == temp[temp[,"orig_rownum"] == temp[1,"orig_rownum"],][j,"recall_rownum"]),]
for (k in 1:nrow(temp2[temp2[, "orig_rownum"] == temp2[1,"orig_rownum"],])){
current_contrast3 <- current_contrast2
current_contrast3[1,5] <- temp2[temp2[,"orig_rownum"] == temp2[1,"orig_rownum"],][k,"orig_rownum"]
current_contrast3[1,6] <- temp2[temp2[,"orig_rownum"] == temp2[1,"orig_rownum"],][k,"recall_rownum"]
current_contrast3[1,21] <- current_contrast2[1,21] + temp2[temp2[,"orig_rownum"] == temp2[1,"orig_rownum"],][k,"sum_contrast"]
temp3 <- temp2[!(temp2[,"orig_rownum"] == temp2[1,"orig_rownum"]) & !(temp2[,"recall_rownum"] == temp2[temp2[,"orig_rownum"] == temp2[1,"orig_rownum"],][k,"recall_rownum"]),]
for (l in 1:nrow(temp3[temp3[, "orig_rownum"] == temp3[1,"orig_rownum"],])){
current_contrast4 <- current_contrast3
current_contrast4[1,7] <- temp3[temp3[,"orig_rownum"] == temp3[1,"orig_rownum"],][l,"orig_rownum"]
current_contrast4[1,8] <- temp3[temp3[,"orig_rownum"] == temp3[1,"orig_rownum"],][l,"recall_rownum"]
current_contrast4[1,21] <- current_contrast3[1,21] + temp3[temp3[,"orig_rownum"] == temp3[1,"orig_rownum"],][l,"sum_contrast"]
temp4 <- temp3[!(temp3[,"orig_rownum"] == temp3[1,"orig_rownum"]) & !(temp3[,"recall_rownum"] == temp3[temp3[,"orig_rownum"] == temp3[1,"orig_rownum"],][l,"recall_rownum"]),]
for (m in 1:nrow(temp4[temp4[, "orig_rownum"] == temp4[1,"orig_rownum"],])){
current_contrast5 <- current_contrast4
current_contrast5[1,9] <- temp4[temp4[,"orig_rownum"] == temp4[1,"orig_rownum"],][m,"orig_rownum"]
current_contrast5[1,10] <- temp4[temp4[,"orig_rownum"] == temp4[1,"orig_rownum"],][m,"recall_rownum"]
current_contrast5[1,21] <- current_contrast4[1,21] + temp4[temp4[,"orig_rownum"] == temp4[1,"orig_rownum"],][m,"sum_contrast"]
temp5 <- temp4[!(temp4[,"orig_rownum"] == temp4[1,"orig_rownum"]) & !(temp4[,"recall_rownum"] == temp4[temp4[,"orig_rownum"] == temp4[1,"orig_rownum"],][m,"recall_rownum"]),]
for (n in 1:nrow(temp5[temp5[, "orig_rownum"] == temp5[1,"orig_rownum"],])){
current_contrast6 <- current_contrast5
current_contrast6[1,11] <- temp5[temp5[,"orig_rownum"] == temp5[1,"orig_rownum"],][n,"orig_rownum"]
current_contrast6[1,12] <- temp5[temp5[,"orig_rownum"] == temp5[1,"orig_rownum"],][n,"recall_rownum"]
current_contrast6[1,21] <- current_contrast5[1,21] + temp5[temp5[,"orig_rownum"] == temp5[1,"orig_rownum"],][n,"sum_contrast"]
temp6 <- temp5[!(temp5[,"orig_rownum"] == temp5[1,"orig_rownum"]) & !(temp5[,"recall_rownum"] == temp5[temp5[,"orig_rownum"] == temp5[1,"orig_rownum"],][n,"recall_rownum"]),]
temp6 <- t(as.matrix(temp6))
current_contrast6[1,13] <- temp6[1,"orig_rownum"]
current_contrast6[1,14] <- temp6[1,"recall_rownum"]
current_contrast6[1,21] <- current_contrast6[1,21] + temp6[1,"sum_contrast"]
for (o in 1:nrow(fixed_pairings)){
current_contrast6[1,13+o*2] <- fixed_pairings[o,"orig_rownum"]
current_contrast6[1,14+o*2] <- fixed_pairings[o,"recall_rownum"]
current_contrast6[1,21] <- current_contrast6[1,21] + fixed_pairings[o,"sum_contrast"]
}
overall_contrast_possibilities <- rbind(overall_contrast_possibilities, current_contrast6)
# these lines print out the current combination number
r <- r + 1
print(paste("calculating combination ",r,sep=""))
}
}
}
}
}
}
rm(temp,temp2,temp3,temp4,temp5,temp6)
rm(current_contrast,current_contrast2,current_contrast3,
current_contrast4,current_contrast5,current_contrast6)
rm(i,j,k,l,m,n,o)
rm(fixed_pairings, reduced_comparison_table)
source("~/gnet_recall_analysis/05-01-visualizer.R", encoding = 'UTF-8')
source("~/gnet_recall_analysis/05-02-visualizer_recall.R", encoding = 'UTF-8')
View(comparison_table)
View(overall_contrast_possibilities)
recalled_pairs_ordered
which(overall_contrast_possibilities[1,]==i, arr.ind = TRUE)[1]
masik <- which(overall_contrast_possibilities[1,]==i, arr.ind = TRUE)[2]
masik
overall_contrast_possibilities[1,]==i
which(overall_contrast_possibilities[1,]==i, arr.ind = TRUE)[1]
which(overall_contrast_possibilities[1,]==i, arr.ind = TRUE)
egyik %% 2 == 1
egyik <- which(overall_contrast_possibilities[1,]==i, arr.ind = TRUE)[1]
egyik
6 %% 2
egyik %% 2
egyik %% 2 == 1
source("~/gnet_recall_analysis/05-01-visualizer.R", encoding = 'UTF-8')
source("~/gnet_recall_analysis/05-02-visualizer_recall.R", encoding = 'UTF-8')
recalled_pairs_ordered
overall_contrast_possibilities[1,]
View(overall_contrast_possibilities)
overall_contrast_possibilities <- overall_contrast_possibilities[order(overall_contrast_possibilities[,21],decreasing=FALSE),]
i <- 1
egyik <- which(overall_contrast_possibilities[1,]==i, arr.ind = TRUE)[1]
masik <- which(overall_contrast_possibilities[1,]==i, arr.ind = TRUE)[2]
egyik
masik
source("~/gnet_recall_analysis/05-02-visualizer_recall.R", encoding = 'UTF-8')
source("~/gnet_recall_analysis/06-autocomparator_for_recalltest.R", encoding = 'UTF-8')
source("~/gnet_recall_analysis/06-autocomparator_for_recalltest.R", encoding = 'UTF-8')
View(final_recollection_data)
gnet_recalldata_matricesarray_stimulusID
prototype_pos
original_stimulus <- gnet_stimdata_matricesarray[103,,]
recalled_stimulus <- gnet_recalldata_matricesarray[11,,]
original_stim_pairs <- gnet_stimdata_matricesarray_pairs[103,,]
recalled_stim_pairs <- gnet_recalldata_matricesarray_pairs[11,,]
source("~/gnet_recall_analysis/05-comparator_preselection.R")
source("~/gnet_recall_analysis/05-01-visualizer.R", encoding = 'UTF-8')
source("~/gnet_recall_analysis/05-02-visualizer_recall.R", encoding = 'UTF-8')
View(final_recollection_data)
mean(final_recollection_data[,overall_contrast])
mean(final_recollection_data[,"overall_contrast"])
final_recollection_data[,"overall_contrast"]
mean(as.numeric(final_recollection_data[,"overall_contrast"]))
mean(as.numeric(final_recollection_data["prototype_nr"==1,"overall_contrast"]))
final_recollection_data["prototype_nr"==1,"overall_contrast"]
final_recollection_data[,"overall_contrast"==1]
final_recollection_data[2,"overall_contrast"]
final_recollection_data["prototype_nr"==2,"overall_contrast"]
final_recollection_data["prototype_nr"==2,]
mean(as.numeric(final_recollection_data[final_recollection_data[, "prototype_nr"] == 1,"overall_contrast"]))
mean(as.numeric(final_recollection_data[final_recollection_data[, "prototype_nr"] == 2,"overall_contrast"]))
mean(as.numeric(final_recollection_data[final_recollection_data[, "prototype_nr"] == 3,"overall_contrast"]))
mean(as.numeric(final_recollection_data[final_recollection_data[, "prototype_nr"] == 4,"overall_contrast"]))
sd(as.numeric(final_recollection_data[final_recollection_data[, "prototype_nr"] == 1,"overall_contrast"]))
sd(as.numeric(final_recollection_data[final_recollection_data[, "prototype_nr"] == 2,"overall_contrast"]))
sd(as.numeric(final_recollection_data[final_recollection_data[, "prototype_nr"] == 3,"overall_contrast"]))
sd(as.numeric(final_recollection_data[final_recollection_data[, "prototype_nr"] == 4,"overall_contrast"]))
original_stimulus <- gnet_stimdata_matricesarray[104,,]
recalled_stimulus <- gnet_recalldata_matricesarray[10,,]
original_stim_pairs <- gnet_stimdata_matricesarray_pairs[104,,]
recalled_stim_pairs <- gnet_recalldata_matricesarray_pairs[10,,]
source("~/gnet_recall_analysis/05-comparator_preselection.R")
source("~/gnet_recall_analysis/05-01-visualizer.R", encoding = 'UTF-8')
source("~/gnet_recall_analysis/05-02-visualizer_recall.R", encoding = 'UTF-8')
gnet_recalldata_matricesarray_stimulusID
original_stimulus <- gnet_stimdata_matricesarray[104,,]
recalled_stimulus <- gnet_recalldata_matricesarray[21,,]
original_stim_pairs <- gnet_stimdata_matricesarray_pairs[104,,]
recalled_stim_pairs <- gnet_recalldata_matricesarray_pairs[21,,]
source("~/gnet_recall_analysis/05-comparator_preselection.R")
source("~/gnet_recall_analysis/05-01-visualizer.R", encoding = 'UTF-8')
source("~/gnet_recall_analysis/05-02-visualizer_recall.R", encoding = 'UTF-8')
prototype_pos
original_stimulus <- gnet_stimdata_matricesarray[103,,]
recalled_stimulus <- gnet_recalldata_matricesarray[11,,]
original_stim_pairs <- gnet_stimdata_matricesarray_pairs[103,,]
recalled_stim_pairs <- gnet_recalldata_matricesarray_pairs[11,,]
source("~/gnet_recall_analysis/05-comparator_preselection.R")
source("~/gnet_recall_analysis/05-01-visualizer.R", encoding = 'UTF-8')
source("~/gnet_recall_analysis/05-02-visualizer_recall.R", encoding = 'UTF-8')
original_stimulus <- gnet_stimdata_matricesarray[104,,]
recalled_stimulus <- gnet_recalldata_matricesarray[27,,]
original_stim_pairs <- gnet_stimdata_matricesarray_pairs[104,,]
recalled_stim_pairs <- gnet_recalldata_matricesarray_pairs[27,,]
source("~/gnet_recall_analysis/05-comparator_preselection.R")
source("~/gnet_recall_analysis/05-01-visualizer.R", encoding = 'UTF-8')
source("~/gnet_recall_analysis/05-02-visualizer_recall.R", encoding = 'UTF-8')
original_stimulus <- gnet_stimdata_matricesarray[103,,]
recalled_stimulus <- gnet_recalldata_matricesarray[26,,]
original_stim_pairs <- gnet_stimdata_matricesarray_pairs[103,,]
recalled_stim_pairs <- gnet_recalldata_matricesarray_pairs[26,,]
source("~/gnet_recall_analysis/05-comparator_preselection.R")
source("~/gnet_recall_analysis/05-01-visualizer.R", encoding = 'UTF-8')
source("~/gnet_recall_analysis/05-02-visualizer_recall.R", encoding = 'UTF-8')
rawdatacondition <- c("orig","delay","artn","delart")
for (rawdatain in 1:length(rawdatacondition)){
eval(parse(text=paste("gnet_recalldata_matricesarray <- gnet_recalldata_matricesarray_",rawdatacondition[rawdatain],sep="")))
eval(parse(text=paste("gnet_recalldata_matricesarray_stimulusID <- gnet_recalldata_matricesarray_stimulusID_",rawdatacondition[rawdatain],sep="")))
eval(parse(text=paste("gnet_recalldata_matricesarray_pairs <- gnet_recalldata_matricesarray_pairs_",rawdatacondition[rawdatain],sep="")))
source('06-autocomparator_for_recalltest.R')
eval(parse(text=paste("final_recollection_data_",rawdatacondition[rawdatain]," <- final_recollection_data",sep="")))
rm(final_recollection_data)
}
source("~/gnet_recall_analysis/02-recalldata_matrix_transformation.R", encoding = 'UTF-8')
source("~/gnet_recall_analysis/XX-recalldata_transformation_02-04.R")
source("~/gnet_recall_analysis/07-autoanalysis_of_conditions.R")
source("~/gnet_recall_analysis/01-stimdata_matrix_transformation.R", encoding = 'UTF-8')
source("~/gnet_recall_analysis/07-autoanalysis_of_conditions.R")
source("~/gnet_recall_analysis/03-calculate_relative_position_elements.R", encoding = 'UTF-8')
source("~/gnet_recall_analysis/07-autoanalysis_of_conditions.R")
prototype_nr
temp3[1, "prototype_nr"]
"prototype_nr"
View(current_pairing)
overall_recallidentity_possibilities
recallidentity_pairings
View(final_recollection_data_orig)
View(final_recollection_data_delay)
mean(final_recollection_data_orig$overall_contrast)
mean(final_recollection_data_orig[,"overall_contrast"])
mean(as.numeric(final_recollection_data_orig[,"overall_contrast"]))
mean(as.numeric(final_recollection_data_delay[,"overall_contrast"]))
mean(as.numeric(final_recollection_data_orig[prototype_nr == 1,"overall_contrast"]))
mean(as.numeric(final_recollection_data_orig["prototype_nr" == 1,"overall_contrast"]))
final_recollection_data_orig["prototype_nr" == 1,"overall_contrast"]
final_recollection_data_orig["prototype_nr" == 1,]
final_recollection_data_orig["prototype_nr" == "1",]
final_recollection_data_orig[,"prototype_nr"]
final_recollection_data_orig["prototype_nr" = "1",]
final_recollection_data_orig["prototype_nr" == "1",]
final_recollection_data_orig[final_recollection_data_orig[, "prototype_nr"] == 1,]
mean(as.numeric(final_recollection_data_orig[final_recollection_data_orig[, "prototype_nr"] == 1,"overall_contrast"]))
mean(as.numeric(final_recollection_data_orig[final_recollection_data_delay[, "prototype_nr"] == 1,"overall_contrast"]))
mean(as.numeric(final_recollection_data_delay[final_recollection_data_delay[, "prototype_nr"] == 1,"overall_contrast"]))
for (i in 1:4){
print(mean(as.numeric(final_recollection_data_orig[final_recollection_data_orig[, "prototype_nr"] == i,"overall_contrast"])))
print(mean(as.numeric(final_recollection_data_delay[final_recollection_data_delay[, "prototype_nr"] == i,"overall_contrast"])))
}
for (i in 1:4){
print(text=paste("Prototype Nr",i,sep=" "))
print(mean(as.numeric(final_recollection_data_orig[final_recollection_data_orig[, "prototype_nr"] == i,"overall_contrast"])))
print(mean(as.numeric(final_recollection_data_delay[final_recollection_data_delay[, "prototype_nr"] == i,"overall_contrast"])))
}
for (i in 1:4){
print(paste("Prototype Nr",i,sep=" "))
print(mean(as.numeric(final_recollection_data_orig[final_recollection_data_orig[, "prototype_nr"] == i,"overall_contrast"])))
print(mean(as.numeric(final_recollection_data_delay[final_recollection_data_delay[, "prototype_nr"] == i,"overall_contrast"])))
}
for (i in 1:4){
print(paste("Prototype Nr",i,sep=" "))
print(sd(as.numeric(final_recollection_data_orig[final_recollection_data_orig[, "prototype_nr"] == i,"overall_contrast"])))
print(sd(as.numeric(final_recollection_data_delay[final_recollection_data_delay[, "prototype_nr"] == i,"overall_contrast"])))
}
# get the location of the prototypes
prototype_pos <- c(match("prototype1",gnet_stimdata_matricesarray_stimulusID),
match("prototype2",gnet_stimdata_matricesarray_stimulusID),
match("prototype3",gnet_stimdata_matricesarray_stimulusID),
match("prototype4",gnet_stimdata_matricesarray_stimulusID))
newstim_pos <- match(gnet_stimdata_matricesarray_stimulusID[str_detect(gnet_stimdata_matricesarray_stimulusID, "p[1-4:6-9]s..")],gnet_stimdata_matricesarray_stimulusID)
for (s in 1:length(newstim_pos)){
recallidentity_pairings <- matrix(nrow = 4, ncol = 4)
colnames(recallidentity_pairings) <- c("participantID","prototype_nr","recall_nr","overall_contrast")
# recalled_pos <- c(which(gnet_recalldata_matricesarray_stimulusID %in% unique(gnet_recalldata_matricesarray_stimulusID)[s]))
recalled_stimulus <- gnet_stimdata_matricesarray[newstim_pos[s],,]
recalled_stim_pairs <- gnet_stimdata_matricesarray_pairs[newstim_pos[s],,]
for (p in 1:length(prototype_pos)){
original_stimulus <- gnet_stimdata_matricesarray[prototype_pos[p],,]
original_stim_pairs <- gnet_stimdata_matricesarray_pairs[prototype_pos[p],,]
source('05-comparator_preselection.R')
recallidentity_pairings[p,"participantID"] <- unique(gnet_stimdata_matricesarray_stimulusID[newstim_pos[s]])
recallidentity_pairings[p,"prototype_nr"] <- p
recallidentity_pairings[p,"recall_nr"] <- s
recallidentity_pairings[p,"overall_contrast"] <- overall_contrast_possibilities[1,21]
}
recallidentity_pairings <-
recallidentity_pairings[order(recallidentity_pairings[,4],decreasing=FALSE),]
if (!exists("final_validation_data")){
final_validation_data <- recallidentity_pairings[1,]
} else {
final_validation_data <- rbind(final_validation_data, recallidentity_pairings[1,])
}
rm(recallidentity_pairings)
}
final_validation_data
View(final_validation_data)
difference_indices <- read.csv("DiffIndices.csv")
View(difference_indices)
difference_indices <- read.csv("DiffIndices.csv",row.names = FALSE)
difference_indices <- read.csv("DiffIndices.csv",row.names = NULL)
View(difference_indices)
difference_indices <- read.csv("DiffIndices.csv",header=TRUE)
View(difference_indices)
difference_indices <- read.csv("DiffIndices.csv",row.names = 1:n)
difference_indices <- read.csv("DiffIndices.csv",row.names = 1:21)
difference_indices <- read.csv("DiffIndices.csv")
View(difference_indices)
difference_indices$X <- NULL
View(difference_indices)
View(final_validation_data)
colnames(final_validation_data)
# new comparison algorythm - difference to closest original (NCA_DCO)
colnames(final_validation_data) <- c("pict","prototype_nr","recall_nr","NCA_DCO")
# new comparison algorythm - difference to closest original (NCA_DCO)
colnames(final_validation_data) <- c("pict","prototype_nr","recall_nr","NCA_DCO")
difference_indices <- difference_indices %>% left_join(final_validation_data, by="pict")
temp <- difference_indices %>% left_join(final_validation_data, by="pict")
View(difference_indices)
final_validation_data
final_validation_data <- as.data.frame(final_validation_data)
difference_indices <- difference_indices %>% left_join(final_validation_data, by="pict")
View(difference_indices)
difference_indices$prototype_nr <- NULL
difference_indices$recall_nr <- NULL
difference_indices <- read.csv("DiffIndices.csv")
difference_indices$X <- NULL
# new comparison algorythm - difference to closest original (NCA_DCO)
colnames(final_validation_data) <- c("pict","prototype_nr","recall_nr","NCA_DCO")
final_validation_data <- as.data.frame(final_validation_data)
difference_indices <- difference_indices %>% left_join(final_validation_data, by="pict")
# difference_indices$prototype_nr <- NULL
difference_indices$recall_nr <- NULL
View(difference_indices)
write.csv(difference_indices,"difference_indices.csv")
write.csv(difference_indices,"difference_indices.csv",row.names = NULL)
write.csv(difference_indices,"difference_indices.csv",row.names = FALSE)
write.csv(difference_indices,"difference_indices_202405.csv",row.names = FALSE)
